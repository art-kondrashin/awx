collector_name: instance_1m
min_interval: 1m

metrics:
  - metric_name: pg_statements_calls
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Number of times the statement was executed
    values: [pg_statements_calls]
    query_ref: query_stats
  - metric_name: pg_statements_rows
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of rows retrieved or affected by the statement
    values: [pg_statements_rows]
    query_ref: query_stats
  - metric_name: pg_statements_total_time
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total time spent planning and executing the statement, in milliseconds
    values: [pg_statements_total_time]
    query_ref: query_stats
  - metric_name: pg_statements_max_exec_time
    key_labels:
      - datname
      - queryid
      - query
    type: gauge
    help: Max time spent executing the statement, in milliseconds
    values: [pg_statements_max_exec_time]
    query_ref: query_stats
  - metric_name: pg_statements_stddev_exec_time
    key_labels:
      - datname
      - queryid
      - query
    type: gauge
    help: Stddev of time spent executing the statement, in milliseconds
    values: [pg_statements_stddev_exec_time]
    query_ref: query_stats
  - metric_name: pg_statements_plan_time
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total time spent planning the statement, in milliseconds
    values: [pg_statements_plan_time]
    query_ref: query_stats
  - metric_name: pg_statements_max_plan_time
    key_labels:
      - datname
      - queryid
      - query
    type: gauge
    help: Max time spent planning the statement, in milliseconds
    values: [pg_statements_max_plan_time]
    query_ref: query_stats
  - metric_name: pg_statements_stddev_plan_time
    key_labels:
      - datname
      - queryid
      - query
    type: gauge
    help: Stddev of time spent planning the statement, in milliseconds
    values: [pg_statements_stddev_plan_time]
    query_ref: query_stats
  - metric_name: pg_statements_shared_blks_hit
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of shared block cache hits by the statement
    values: [pg_statements_shared_blks_hit]
    query_ref: query_stats
  - metric_name: pg_statements_shared_blks_read
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of shared blocks read by the statement
    values: [pg_statements_shared_blks_read]
    query_ref: query_stats
  - metric_name: pg_statements_shared_blks_written
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of shared blocks written by the statement
    values: [pg_statements_shared_blks_written]
    query_ref: query_stats
  - metric_name: pg_statements_shared_blks_dirtied
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of shared blocks dirtied by the statement
    values: [pg_statements_shared_blks_dirtied]
    query_ref: query_stats
  - metric_name: pg_statements_temp_blks_read
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of temp blocks read by the statement
    values: [pg_statements_temp_blks_read]
    query_ref: query_stats
  - metric_name: pg_statements_temp_blks_written
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of temp blocks written by the statement
    values: [pg_statements_temp_blks_written]
    query_ref: query_stats
  - metric_name: pg_statements_blk_read_time
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total time the statement spent reading blocks, in milliseconds
    values: [pg_statements_blk_read_time]
    query_ref: query_stats
  - metric_name: pg_statements_blk_write_time
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total time the statement spent writing blocks, in milliseconds
    values: [pg_statements_blk_write_time]
    query_ref: query_stats
  - metric_name: pg_statements_wal_records
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of WAL records generated by the statement
    values: [pg_statements_wal_records]
    query_ref: query_stats
  - metric_name: pg_statements_wal_fpi
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total number of WAL full page images generated by the statement
    values: [pg_statements_wal_fpi]
    query_ref: query_stats
  - metric_name: pg_statements_wal_bytes
    key_labels:
      - datname
      - queryid
      - query
    type: counter
    help: Total amount of WAL generated by the statement in bytes
    values: [pg_statements_wal_bytes]
    query_ref: query_stats

queries:
  - query_name: query_stats
    query: |
      with q_data as (
      select
        pg_d.datname as datname,
        s.calls as calls,
        s.rows as rows,
        s.total_exec_time + s.total_plan_time as total_time,
        s.max_exec_time as max_exec_time,
        s.stddev_exec_time as stddev_exec_time, ---
        s.total_plan_time as total_plan_time,
        s.max_plan_time as max_plan_time, ---
        s.stddev_plan_time as stddev_plan_time, ---
        s.wal_records as wal_records, ---
        s.wal_fpi as wal_fpi,
        s.wal_bytes as wal_bytes,
        shared_blks_hit as shared_blks_hit,
        shared_blks_read as shared_blks_read,
        shared_blks_written as shared_blks_written,
        shared_blks_dirtied as shared_blks_dirtied,
        temp_blks_read as temp_blks_read,
        temp_blks_written as temp_blks_written,
        shared_blk_read_time + local_blk_read_time  as blk_read_time,
        shared_blk_write_time + local_blk_write_time  as blk_write_time,
        md5(regexp_replace(regexp_replace(regexp_replace(regexp_replace(s.query, '\(\s*\?.[^\)]*\)|\(\s*\$.[^\)]*\)', '(***)', 'g'), E'[ \\t\\n\\r\\s+]+', ' ', 'g'), '\(\*\*\*\)[\s,\(\*\)]*\(\*\*\*\)', '(***)...(***)', 'g'),'([\_\-\$=, ])[0-9]+','\1#', 'g')::text) as queryid,
        regexp_replace(regexp_replace(regexp_replace(regexp_replace(s.query, '\(\s*\?.[^\)]*\)|\(\s*\$.[^\)]*\)', '(***)', 'g'), E'[ \\t\\n\\r\\s+]+', ' ', 'g'), '\(\*\*\*\)[\s,\(\*\)]*\(\*\*\*\)', '(***)...(***)', 'g'),'([\_\-\$=, ])[0-9]+','\1#', 'g')::text as query
      from
        public.pgpro_stats_statements s
      join pg_database pg_d on
        s.dbid = pg_d.oid
      where
        calls > 0
        and  total_exec_time > 0 and not upper(s.query::varchar(50)) like any (array['DEALLOCATE%',
        'SET %',
        'DISCARD ALL',
        'START TRANSACTION ISOLATION%',
        'RESET %',
        'BEGIN%',
        'BEGIN;',
        'COMMIT%',
        'END%',
        'ROLLBACK%',
        'SAVEPOINT%',
        'CALL%',
        'DECLARE%',
        'SHOW%'])
        and s.query!='<insufficient privilege>'
      ), q_data_agg as (
      select
        b.datname::varchar as datname,
        b.queryid as queryid,
        case when length(b.query) > 1000
             then left(b.query, 500) || '<...>' || right(b.query, 500)
             else b.query
        end as query,
        sum(b.calls)::int8 as pg_statements_calls,
        sum(b.rows)::int8 as pg_statements_rows,
        round(sum(b.total_time)::numeric, 3)::double precision as pg_statements_total_time,
        round(max(b.max_exec_time)::numeric, 3)::double precision as pg_statements_max_exec_time,
        round(avg(b.stddev_exec_time)::numeric, 3)::double precision as pg_statements_stddev_exec_time,
        round(sum(b.total_plan_time)::numeric, 3)::double precision as pg_statements_plan_time,
        round(max(b.max_plan_time)::numeric, 3)::double precision as pg_statements_max_plan_time,
        round(avg(b.stddev_plan_time)::numeric, 3)::double precision as pg_statements_stddev_plan_time,
        sum(b.shared_blks_hit)::int8 as pg_statements_shared_blks_hit,
        sum(b.shared_blks_read)::int8 as pg_statements_shared_blks_read,
        sum(b.shared_blks_written)::int8 as pg_statements_shared_blks_written,
        sum(b.shared_blks_dirtied)::int8 as pg_statements_shared_blks_dirtied,
        sum(b.temp_blks_read)::int8 as pg_statements_temp_blks_read,
        sum(b.temp_blks_written)::int8 as pg_statements_temp_blks_written,
        round(sum(b.blk_read_time)::numeric, 3)::double precision as pg_statements_blk_read_time,
        round(sum(b.blk_write_time)::numeric, 3)::double precision as pg_statements_blk_write_time,
        round(sum(b.wal_records)::numeric, 3)::double precision as pg_statements_wal_records,
        round(sum(b.wal_fpi)::numeric, 3)::double precision as pg_statements_wal_fpi,
        round(sum(b.wal_bytes)::numeric, 3)::double precision as pg_statements_wal_bytes
      from q_data as b
      group by
        1,
        2,
        3
      ), top_rn as (
          select
              *
              , row_number() over (order by pg_statements_total_time desc) as rn
          from q_data_agg
      )
      select
          datname
          , queryid
          , query
          , pg_statements_calls
          , pg_statements_rows
          , pg_statements_total_time
          , pg_statements_max_exec_time
          , pg_statements_stddev_exec_time
          , pg_statements_plan_time
          , pg_statements_max_plan_time
          , pg_statements_stddev_plan_time
          , pg_statements_shared_blks_hit
          , pg_statements_shared_blks_read
          , pg_statements_shared_blks_written
          , pg_statements_shared_blks_dirtied
          , pg_statements_temp_blks_read
          , pg_statements_temp_blks_written
          , pg_statements_blk_read_time
          , pg_statements_blk_write_time
          , pg_statements_wal_records
          , pg_statements_wal_fpi
          , pg_statements_wal_bytes
      from top_rn
      where rn <= 200
      union
      select
          datname
          , md5('others')
          , 'others'
          , sum(pg_statements_calls)
          , sum(pg_statements_rows)
          , sum(pg_statements_total_time)
          , max(pg_statements_max_exec_time)
          , avg(pg_statements_stddev_exec_time)
          , sum(pg_statements_plan_time)
          , max(pg_statements_max_plan_time)
          , avg(pg_statements_stddev_plan_time)
          , sum(pg_statements_shared_blks_hit)
          , sum(pg_statements_shared_blks_read)
          , sum(pg_statements_shared_blks_written)
          , sum(pg_statements_shared_blks_dirtied)
          , sum(pg_statements_temp_blks_read)
          , sum(pg_statements_temp_blks_written)
          , sum(pg_statements_blk_read_time)
          , sum(pg_statements_blk_write_time)
          , sum(pg_statements_wal_records)
          , sum(pg_statements_wal_fpi)
          , sum(pg_statements_wal_bytes)
      from top_rn
      where rn > 200
      group by datname

